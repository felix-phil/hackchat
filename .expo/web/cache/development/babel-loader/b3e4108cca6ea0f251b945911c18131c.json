{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/felix/Felix/Hack/hack/components/main/CustomNavigationAppbar.js\";\n\nimport React, { useState, useRef } from \"react\";\nimport { Appbar, IconButton, Menu, TextInput, useTheme, TouchableRipple, Switch } from \"react-native-paper\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { PreferencesContext } from \"../../constants/PreferencesContext\";\n\nvar CustomAppbar = function CustomAppbar(_ref) {\n  var navigation = _ref.navigation,\n      previous = _ref.previous;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchField = _useState4[0],\n      setSearchField = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchValue = _useState6[0],\n      setSearchValue = _useState6[1];\n\n  var theme = useTheme();\n\n  var _React$useContext = React.useContext(PreferencesContext),\n      toggleTheme = _React$useContext.toggleTheme,\n      isThemeDark = _React$useContext.isThemeDark;\n\n  var openMenu = function openMenu() {\n    return setVisible(true);\n  };\n\n  var closeMenu = function closeMenu() {\n    return setVisible(false);\n  };\n\n  var openSearchField = function openSearchField() {\n    return setSearchField(true);\n  };\n\n  var closeSearchField = function closeSearchField() {\n    return setSearchField(false);\n  };\n\n  var onSubmitHandler = function onSubmitHandler() {\n    console.log(searchValue);\n    setSearchField(false);\n  };\n\n  return React.createElement(Appbar.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, previous ? React.createElement(Appbar.BackAction, {\n    onPress: navigation.goBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }) : null, !searchField && React.createElement(Appbar.Content, {\n    title: \"HackChat\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 30\n    }\n  }), searchField && React.createElement(View, {\n    style: styles.textInpCont,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    value: searchValue,\n    mode: \"flat\",\n    underlineColor: \"white\",\n    placeholder: \"search...\",\n    placeholderTextColor: \"#ccc\",\n    theme: {\n      colors: {\n        text: \"white\"\n      }\n    },\n    returnKeyType: \"search\",\n    onChangeText: function onChangeText(text) {\n      return setSearchValue(text);\n    },\n    style: styles.textInp,\n    left: React.createElement(TextInput.Icon, {\n      name: \"arrow-left\",\n      color: \"white\",\n      size: 24,\n      onPress: closeSearchField,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 31\n      }\n    }),\n    right: React.createElement(TextInput.Icon, {\n      color: \"white\",\n      name: \"close\",\n      size: 24,\n      onPress: function onPress() {\n        return setSearchValue(\"\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 32\n      }\n    }),\n    onEndEditing: onSubmitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  })), !searchField && React.createElement(Appbar.Action, {\n    icon: \"search-web\",\n    color: \"white\",\n    onPress: openSearchField,\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 30\n    }\n  }), !searchField && !previous ? React.createElement(Menu, {\n    visible: visible,\n    onDismiss: closeMenu,\n    anchor: React.createElement(Appbar.Action, {\n      icon: \"dots-vertical\",\n      color: \"white\",\n      onPress: openMenu,\n      size: 20,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, React.createElement(Menu.Item, {\n    onPress: function onPress() {\n      console.log('Option 1 was pressed');\n    },\n    title: \"Option 1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), React.createElement(Menu.Item, {\n    onPress: function onPress() {\n      console.log('Option 2 was pressed');\n    },\n    title: \"Option 2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), React.createElement(Menu.Item, {\n    onPress: function onPress() {\n      console.log('Option 3 was pressed');\n    },\n    title: \"Option 3\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })) : null);\n};\n\nvar styles = StyleSheet.create({\n  textInp: {\n    width: \"100%\",\n    height: 40,\n    backgroundColor: \"transparent\",\n    color: \"white\",\n    borderBottomColor: \"white\"\n  },\n  textInpCont: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport default CustomAppbar;","map":{"version":3,"sources":["/home/felix/Felix/Hack/hack/components/main/CustomNavigationAppbar.js"],"names":["React","useState","useRef","Appbar","IconButton","Menu","TextInput","useTheme","TouchableRipple","Switch","MaterialCommunityIcons","PreferencesContext","CustomAppbar","navigation","previous","visible","setVisible","searchField","setSearchField","searchValue","setSearchValue","theme","useContext","toggleTheme","isThemeDark","openMenu","closeMenu","openSearchField","closeSearchField","onSubmitHandler","console","log","goBack","styles","textInpCont","colors","text","textInp","StyleSheet","create","width","height","backgroundColor","color","borderBottomColor","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\"\nimport { Appbar, IconButton, Menu, TextInput, useTheme, TouchableRipple, Switch } from \"react-native-paper\"\nimport { View, StyleSheet } from \"react-native\"\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\"\nimport { PreferencesContext } from \"../../constants/PreferencesContext\"\n\nconst CustomAppbar = ({ navigation, previous }) => {\n    const [visible, setVisible] = useState(false)\n    const [searchField, setSearchField] = useState(false)\n    const [searchValue, setSearchValue] = useState(\"\")\n    const theme = useTheme();\n    const { toggleTheme, isThemeDark } = React.useContext(PreferencesContext)\n\n    const openMenu = () => setVisible(true);\n    const closeMenu = () => setVisible(false);\n\n    const openSearchField = () => setSearchField(true)\n    const closeSearchField = () => setSearchField(false)\n\n    const onSubmitHandler = () => {\n        console.log(searchValue)\n        setSearchField(false)\n    }\n    return (\n        <Appbar.Header>\n            {previous ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n            {!searchField && <Appbar.Content title=\"HackChat\" />}\n            {searchField &&\n                <View style={styles.textInpCont}>\n                    <TextInput value={searchValue}\n                        mode=\"flat\"\n                        underlineColor=\"white\"\n                        placeholder=\"search...\"\n                        placeholderTextColor=\"#ccc\"\n                        theme={{\n                            colors: { text: \"white\" }\n                        }}\n                        returnKeyType=\"search\"\n                        onChangeText={(text) => setSearchValue(text)}\n                        style={styles.textInp}\n                        left={<TextInput.Icon\n                            name=\"arrow-left\"\n                            color=\"white\"\n                            size={24}\n                            onPress={closeSearchField} />}\n                        right={<TextInput.Icon\n                            color=\"white\"\n                            name=\"close\"\n                            size={24}\n                            onPress={() => setSearchValue(\"\")}\n                        />}\n                        onEndEditing={onSubmitHandler}\n                    />\n                </View>\n            }\n            {/* {!searchField && <TouchableRipple onPress={() => toggleTheme()}>\n                <Switch\n                    value={isThemeDark}\n                />\n            </TouchableRipple>} */}\n            {!searchField && <Appbar.Action icon=\"search-web\" color=\"white\" onPress={openSearchField} size={20} />}\n            {!searchField && !previous ? (\n                <Menu\n                    visible={visible}\n                    onDismiss={closeMenu}\n                    anchor={\n                        <Appbar.Action icon=\"dots-vertical\" color=\"white\" onPress={openMenu} size={20} />\n                    }>\n                    <Menu.Item onPress={() => { console.log('Option 1 was pressed') }} title=\"Option 1\" />\n                    <Menu.Item onPress={() => { console.log('Option 2 was pressed') }} title=\"Option 2\" />\n                    <Menu.Item onPress={() => { console.log('Option 3 was pressed') }} title=\"Option 3\" disabled />\n                </Menu>\n            ) : null}\n        </Appbar.Header>\n    )\n}\nconst styles = StyleSheet.create({\n    textInp: {\n        // flex: 1,\n        width: \"100%\",\n        height: 40,\n        backgroundColor: \"transparent\",\n        color: \"white\",\n        borderBottomColor: \"white\"\n    },\n    textInpCont: {\n        width: \"100%\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    }\n})\nexport default CustomAppbar"]},"metadata":{},"sourceType":"module"}