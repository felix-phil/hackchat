{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/felix/Felix/Hack/hack/navigations/NavigationContainer.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport AuthNavigation from \"./AuthNavigation\";\nimport MainNavigation from \"./MainNavigation\";\nimport * as Notifications from \"expo-notifications\";\nimport Constants from \"expo-constants\";\nimport * as authActions from \"../store/actions/auth\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Activity from \"../components/utils/Activity\";\nimport * as loadAction from \"../store/actions/loading\";\nimport * as messageAction from \"../store/actions/messages\";\nimport Alert from \"../components/utils/Alert\";\nimport { refreshTokenUrl } from \"../constants/endpoints\";\n\nvar NavContainer = function NavContainer() {\n  var dispatch = useDispatch();\n  var isAuth = useSelector(function (state) {\n    return state.auth.isAuthenticated;\n  });\n  var isLoading = useSelector(function (state) {\n    return state.load.loading;\n  });\n  var loadText = useSelector(function (state) {\n    return state.load.loadText;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.messages;\n  }),\n      show = _useSelector.show,\n      message = _useSelector.message,\n      type = _useSelector.type;\n\n  var fetchDeviceId = function fetchDeviceId() {\n    var deviceId, _await$Notifications$, existingStatus, finalStatus, _await$Notifications$2, status, token;\n\n    return _regeneratorRuntime.async(function fetchDeviceId$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"deviceId\"));\n\n          case 2:\n            deviceId = _context.sent;\n\n            if (!deviceId) {\n              _context.next = 8;\n              break;\n            }\n\n            console.log(deviceId);\n            dispatch(authActions.setDeviceId(deviceId));\n            _context.next = 33;\n            break;\n\n          case 8:\n            _context.prev = 8;\n\n            if (!Constants.isDevice) {\n              _context.next = 28;\n              break;\n            }\n\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(Notifications.getPermissionsAsync());\n\n          case 12:\n            _await$Notifications$ = _context.sent;\n            existingStatus = _await$Notifications$.status;\n            finalStatus = existingStatus;\n\n            if (!(existingStatus !== \"granted\")) {\n              _context.next = 21;\n              break;\n            }\n\n            _context.next = 18;\n            return _regeneratorRuntime.awrap(Notifications.requestPermissionsAsync());\n\n          case 18:\n            _await$Notifications$2 = _context.sent;\n            status = _await$Notifications$2.status;\n            finalStatus = status;\n\n          case 21:\n            if (!(finalStatus !== \"granted\")) {\n              _context.next = 24;\n              break;\n            }\n\n            alert('Failed ti get push token notifications');\n            return _context.abrupt(\"return\");\n\n          case 24:\n            _context.next = 26;\n            return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n          case 26:\n            token = _context.sent;\n            dispatch(authActions.setDeviceId(token.data));\n\n          case 28:\n            _context.next = 33;\n            break;\n\n          case 30:\n            _context.prev = 30;\n            _context.t0 = _context[\"catch\"](8);\n            console.log(_context.t0.message);\n\n          case 33:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[8, 30]], Promise);\n  };\n\n  var tryAuthenticate = function tryAuthenticate() {\n    var authData, refreshToken, accessToken, user, expiresIn, expiryTime;\n    return _regeneratorRuntime.async(function tryAuthenticate$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(authActions.getData(\"authData\"));\n\n          case 3:\n            authData = _context2.sent;\n\n            if (authData) {\n              _context2.next = 7;\n              break;\n            }\n\n            dispatch(authActions.authFail());\n            return _context2.abrupt(\"return\");\n\n          case 7:\n            refreshToken = authData.refreshToken, accessToken = authData.accessToken, user = authData.user, expiresIn = authData.expiresIn;\n            expiryTime = new Date(expiresIn);\n            console.log(Date.now() >= expiryTime.getTime());\n\n            if (!(Date.now() >= expiryTime.getTime() && accessToken && user && refreshTokenUrl)) {\n              _context2.next = 14;\n              break;\n            }\n\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(dispatch(authActions.refreshToken()));\n\n          case 13:\n            return _context2.abrupt(\"return\");\n\n          case 14:\n            if (!(Date.now() >= expiryTime.getTime() || !accessToken || !user || !refreshToken)) {\n              _context2.next = 17;\n              break;\n            }\n\n            dispatch(authActions.authFail());\n            return _context2.abrupt(\"return\");\n\n          case 17:\n            dispatch(authActions.authenticateUser({\n              refreshToken: refreshToken,\n              accessToken: accessToken,\n              user: user,\n              expiresIn: expiresIn\n            }));\n            _context2.next = 23;\n            break;\n\n          case 20:\n            _context2.prev = 20;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch(messageAction.setMessage(_context2.t0.message, \"error\"));\n\n          case 23:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 20]], Promise);\n  };\n\n  useEffect(function () {\n    fetchDeviceId();\n  }, [dispatch]);\n  useEffect(function () {\n    tryAuthenticate();\n  }, [dispatch]);\n  return React.createElement(React.Fragment, null, React.createElement(Activity, {\n    visible: isLoading,\n    loadingText: loadText,\n    hideDialog: function hideDialog() {\n      dispatch(loadAction.stopLoading());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }), isAuth ? React.createElement(MainNavigation, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }) : React.createElement(AuthNavigation, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 36\n    }\n  }), React.createElement(Alert, {\n    visible: show,\n    type: type,\n    message: message,\n    onDismiss: function onDismiss() {\n      return dispatch(messageAction.clearMessage());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default NavContainer;","map":{"version":3,"sources":["/home/felix/Felix/Hack/hack/navigations/NavigationContainer.js"],"names":["React","useEffect","useDispatch","useSelector","NavigationContainer","AuthNavigation","MainNavigation","Notifications","Constants","authActions","AsyncStorage","Activity","loadAction","messageAction","Alert","refreshTokenUrl","NavContainer","dispatch","isAuth","state","auth","isAuthenticated","isLoading","load","loading","loadText","messages","show","message","type","fetchDeviceId","getItem","deviceId","console","log","setDeviceId","isDevice","getPermissionsAsync","existingStatus","status","finalStatus","requestPermissionsAsync","alert","getExpoPushTokenAsync","token","data","tryAuthenticate","getData","authData","authFail","refreshToken","accessToken","user","expiresIn","expiryTime","Date","now","getTime","authenticateUser","setMessage","stopLoading","clearMessage"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,cAAP;AACA,OAAOC,cAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,oBAA/B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAO,KAAKC,WAAZ;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,QAAP;AACA,OAAO,KAAKC,UAAZ;AACA,OAAO,KAAKC,aAAZ;AACA,OAAOC,KAAP;AACA,SAASC,eAAT;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC1B,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,MAAMgB,MAAM,GAAGf,WAAW,CAAC,UAAAgB,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,eAAf;AAAA,GAAN,CAA1B;AAEA,MAAMC,SAAS,GAAGnB,WAAW,CAAC,UAAAgB,KAAK;AAAA,WAAIA,KAAK,CAACI,IAAN,CAAWC,OAAf;AAAA,GAAN,CAA7B;AACA,MAAMC,QAAQ,GAAGtB,WAAW,CAAC,UAAAgB,KAAK;AAAA,WAAIA,KAAK,CAACI,IAAN,CAAWE,QAAf;AAAA,GAAN,CAA5B;;AAEA,qBAAgCtB,WAAW,CAAC,UAAAgB,KAAK;AAAA,WAAIA,KAAK,CAACO,QAAV;AAAA,GAAN,CAA3C;AAAA,MAAQC,IAAR,gBAAQA,IAAR;AAAA,MAAcC,OAAd,gBAAcA,OAAd;AAAA,MAAuBC,IAAvB,gBAAuBA,IAAvB;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEpB,YAAY,CAACqB,OAAb,CAAqB,UAArB,CADF;;AAAA;AACfC,YAAAA,QADe;;AAAA,iBAEjBA,QAFiB;AAAA;AAAA;AAAA;;AAGpBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAf,YAAAA,QAAQ,CAACR,WAAW,CAAC0B,WAAZ,CAAwBH,QAAxB,CAAD,CAAR;AAJoB;AAAA;;AAAA;AAAA;;AAAA,iBAOfxB,SAAS,CAAC4B,QAPK;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAQuB7B,aAAa,CAAC8B,mBAAd,EARvB;;AAAA;AAAA;AAQFC,YAAAA,cARE,yBAQVC,MARU;AASdC,YAAAA,WATc,GASAF,cATA;;AAAA,kBAUdA,cAAc,KAAK,SAVL;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAWQ/B,aAAa,CAACkC,uBAAd,EAXR;;AAAA;AAAA;AAWTF,YAAAA,MAXS,0BAWTA,MAXS;AAYjBC,YAAAA,WAAW,GAAGD,MAAd;;AAZiB;AAAA,kBAcdC,WAAW,KAAK,SAdF;AAAA;AAAA;AAAA;;AAejBE,YAAAA,KAAK,CAAC,wCAAD,CAAL;AAfiB;;AAAA;AAAA;AAAA,6CAkBEnC,aAAa,CAACoC,qBAAd,EAlBF;;AAAA;AAkBZC,YAAAA,KAlBY;AAmBlB3B,YAAAA,QAAQ,CAACR,WAAW,CAAC0B,WAAZ,CAAwBS,KAAK,CAACC,IAA9B,CAAD,CAAR;;AAnBkB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsBnBZ,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAMN,OAAlB;;AAtBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AA0BA,MAAMkB,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAECrC,WAAW,CAACsC,OAAZ,CAAoB,UAApB,CAFD;;AAAA;AAEhBC,YAAAA,QAFgB;;AAAA,gBAGjBA,QAHiB;AAAA;AAAA;AAAA;;AAIrB/B,YAAAA,QAAQ,CAACR,WAAW,CAACwC,QAAZ,EAAD,CAAR;AAJqB;;AAAA;AAOdC,YAAAA,YAPc,GAOiCF,QAPjC,CAOdE,YAPc,EAOAC,WAPA,GAOiCH,QAPjC,CAOAG,WAPA,EAOaC,IAPb,GAOiCJ,QAPjC,CAOaI,IAPb,EAOmBC,SAPnB,GAOiCL,QAPjC,CAOmBK,SAPnB;AAQhBC,YAAAA,UARgB,GAQH,IAAIC,IAAJ,CAASF,SAAT,CARG;AAStBpB,YAAAA,OAAO,CAACC,GAAR,CAAYqB,IAAI,CAACC,GAAL,MAAcF,UAAU,CAACG,OAAX,EAA1B;;AATsB,kBAUnBF,IAAI,CAACC,GAAL,MAAcF,UAAU,CAACG,OAAX,EAAd,IAAsCN,WAAtC,IAAqDC,IAArD,IAA6DrC,eAV1C;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAWfE,QAAQ,CAACR,WAAW,CAACyC,YAAZ,EAAD,CAXO;;AAAA;AAAA;;AAAA;AAAA,kBAclBK,IAAI,CAACC,GAAL,MAAcF,UAAU,CAACG,OAAX,EAAd,IAAsC,CAACN,WAAvC,IAAsD,CAACC,IAAvD,IAA+D,CAACF,YAd9C;AAAA;AAAA;AAAA;;AAerBjC,YAAAA,QAAQ,CAACR,WAAW,CAACwC,QAAZ,EAAD,CAAR;AAfqB;;AAAA;AAkBtBhC,YAAAA,QAAQ,CAACR,WAAW,CAACiD,gBAAZ,CAA6B;AAAER,cAAAA,YAAY,EAAZA,YAAF;AAAgBC,cAAAA,WAAW,EAAXA,WAAhB;AAA6BC,cAAAA,IAAI,EAAJA,IAA7B;AAAmCC,cAAAA,SAAS,EAATA;AAAnC,aAA7B,CAAD,CAAR;AAlBsB;AAAA;;AAAA;AAAA;AAAA;AAoBtBpC,YAAAA,QAAQ,CAACJ,aAAa,CAAC8C,UAAd,CAAyB,aAAM/B,OAA/B,EAAwC,OAAxC,CAAD,CAAR;;AApBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAwBA3B,EAAAA,SAAS,CAAC,YAAM;AACf6B,IAAAA,aAAa;AACb,GAFQ,EAEN,CAACb,QAAD,CAFM,CAAT;AAIAhB,EAAAA,SAAS,CAAC,YAAM;AACf6C,IAAAA,eAAe;AACf,GAFQ,EAEN,CAAC7B,QAAD,CAFM,CAAT;AAGA,SACC,0CACC,oBAAC,QAAD;AACC,IAAA,OAAO,EAAEK,SADV;AAEC,IAAA,WAAW,EAAEG,QAFd;AAGC,IAAA,UAAU,EAAE,sBAAM;AACjBR,MAAAA,QAAQ,CAACL,UAAU,CAACgD,WAAX,EAAD,CAAR;AACA,KALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EASG1C,MAAM,GAAG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAwB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATjC,EAYC,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAES,IAAhB;AAAsB,IAAA,IAAI,EAAEE,IAA5B;AAAkC,IAAA,OAAO,EAAED,OAA3C;AAAoD,IAAA,SAAS,EAAE;AAAA,aAAMX,QAAQ,CAACJ,aAAa,CAACgD,YAAd,EAAD,CAAd;AAAA,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZD,CADD;AAgBA,CAjFD;;AAmFA,eAAe7C,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { NavigationContainer } from '@react-navigation/native';\nimport AuthNavigation from \"./AuthNavigation\";\nimport MainNavigation from \"./MainNavigation\";\nimport * as Notifications from \"expo-notifications\";\nimport Constants from \"expo-constants\";\nimport * as authActions from \"../store/actions/auth\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Activity from \"../components/utils/Activity\";\nimport * as loadAction from \"../store/actions/loading\";\nimport * as messageAction from \"../store/actions/messages\";\nimport Alert from \"../components/utils/Alert\";\nimport { refreshTokenUrl } from \"../constants/endpoints\";\n\nconst NavContainer = () => {\n\tconst dispatch = useDispatch()\n\tconst isAuth = useSelector(state => state.auth.isAuthenticated)\n\n\tconst isLoading = useSelector(state => state.load.loading)\n\tconst loadText = useSelector(state => state.load.loadText)\n\n\tconst { show, message, type } = useSelector(state => state.messages)\n\tconst fetchDeviceId = async () => {\n\t\tconst deviceId = await AsyncStorage.getItem(\"deviceId\")\n\t\tif (deviceId) {\n\t\t\tconsole.log(deviceId)\n\t\t\tdispatch(authActions.setDeviceId(deviceId))\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tif (Constants.isDevice) {\n\t\t\t\t\tconst { status: existingStatus } = await Notifications.getPermissionsAsync();\n\t\t\t\t\tlet finalStatus = existingStatus;\n\t\t\t\t\tif (existingStatus !== \"granted\") {\n\t\t\t\t\t\tconst { status } = await Notifications.requestPermissionsAsync();\n\t\t\t\t\t\tfinalStatus = status\n\t\t\t\t\t}\n\t\t\t\t\tif (finalStatus !== \"granted\") {\n\t\t\t\t\t\talert('Failed ti get push token notifications')\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tconst token = await Notifications.getExpoPushTokenAsync()\n\t\t\t\t\tdispatch(authActions.setDeviceId(token.data))\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.message)\n\t\t\t}\n\t\t}\n\t}\n\tconst tryAuthenticate = async() => {\n\t\ttry {\n\t\t\tconst authData = await authActions.getData(\"authData\")\n\t\t\tif (!authData) {\n\t\t\t\tdispatch(authActions.authFail())\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst { refreshToken, accessToken, user, expiresIn } = authData\n\t\t\tconst expiryTime = new Date(expiresIn)\n\t\t\tconsole.log(Date.now() >= expiryTime.getTime())\n\t\t\tif(Date.now() >= expiryTime.getTime() && accessToken && user && refreshTokenUrl){\n\t\t\t\tawait dispatch(authActions.refreshToken())\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (Date.now() >= expiryTime.getTime() || !accessToken || !user || !refreshToken) {\n\t\t\t\tdispatch(authActions.authFail())\n\t\t\t\treturn\n\t\t\t}\n\t\t\tdispatch(authActions.authenticateUser({ refreshToken, accessToken, user, expiresIn }))\n\t\t} catch (error) {\n\t\t\tdispatch(messageAction.setMessage(error.message, \"error\"))\n\t\t\t// console.log(error)\n\t\t}\n\t}\n\tuseEffect(() => {\n\t\tfetchDeviceId()\n\t}, [dispatch])\n\t\n\tuseEffect(() => {\n\t\ttryAuthenticate()\n\t}, [dispatch])\n\treturn (\n\t\t<>\n\t\t\t<Activity\n\t\t\t\tvisible={isLoading}\n\t\t\t\tloadingText={loadText}\n\t\t\t\thideDialog={() => {\n\t\t\t\t\tdispatch(loadAction.stopLoading())\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{/* <NavigationContainer> */}\n\t\t\t\t{isAuth ? <MainNavigation /> : <AuthNavigation />}\n\t\t\t\t{/* <AuthNavigation /> */}\n\t\t\t{/* </NavigationContainer> */}\n\t\t\t<Alert visible={show} type={type} message={message} onDismiss={() => dispatch(messageAction.clearMessage())} />\n\t\t</>\n\t)\n}\n\nexport default NavContainer\n\n"]},"metadata":{},"sourceType":"module"}