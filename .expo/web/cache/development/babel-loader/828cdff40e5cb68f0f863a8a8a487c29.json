{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/felix/Felix/Hack/hack/navigations/MainTabNav.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport HomeTab from \"../screens/tab/HomeTab\";\nimport StatusTab from \"../screens/tab/StatusTab\";\nimport HistoryTab from \"../screens/tab/HistoryTab\";\nimport CameraTab from \"../screens/tab/CameraScreen\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { Portal, FAB } from \"react-native-paper\";\nimport { useIsFocused, getFocusedRouteNameFromRoute } from \"@react-navigation/native\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nvar Tab = createMaterialTopTabNavigator();\n\nvar MainTabs = function MainTabs(_ref) {\n  var _getFocusedRouteNameF;\n\n  var route = _ref.route;\n  var isFocused = useIsFocused();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showFab = _useState2[0],\n      setShowFab = _useState2[1];\n\n  var routeName = (_getFocusedRouteNameF = getFocusedRouteNameFromRoute(route)) != null ? _getFocusedRouteNameF : 'STATUS';\n  var icon = \"camera\";\n  useEffect(function () {\n    if (routeName == \"Camera\") {\n      setShowFab(false);\n    } else {\n      setShowFab(true);\n    }\n  }, [routeName]);\n\n  switch (routeName) {\n    case 'CHATS':\n      icon = 'android-messages';\n      break;\n\n    case \"Camera\":\n    default:\n      icon = 'camera';\n      break;\n  }\n\n  var getTabBarVisibily = function getTabBarVisibily(route) {\n    var routeName = route.state ? route.state.routes[route.state.index].name : '';\n\n    if (routeName === \"Camera\") {\n      return false;\n    }\n\n    return true;\n  };\n\n  return React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    initialRouteName: \"CHATS\",\n    screenOptions: {\n      showIcon: true\n    },\n    backBehavior: \"initialRoute\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Camera\",\n    component: CameraTab,\n    options: function options(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarShowLabel: false,\n        tabBarIcon: function tabBarIcon(tabInfo) {\n          return React.createElement(Ionicons, {\n            name: \"ios-camera\",\n            size: 24,\n            color: tabInfo.color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }\n          });\n        },\n        tabBarVisible: getTabBarVisibily(route)\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"CHATS\",\n    component: HomeTab,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"STATUS\",\n    component: StatusTab,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"CALLS\",\n    component: HistoryTab,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), showFab && React.createElement(Portal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }\n  }, React.createElement(FAB, {\n    visible: isFocused,\n    icon: icon,\n    small: false,\n    style: {\n      position: 'absolute',\n      bottom: \"7%\",\n      right: \"10%\",\n      backgroundColor: \"purple\"\n    },\n    color: \"white\",\n    onPress: function onPress() {\n      return console.log(\"Going to contacts\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default MainTabs;","map":{"version":3,"sources":["/home/felix/Felix/Hack/hack/navigations/MainTabNav.js"],"names":["React","useEffect","useState","HomeTab","StatusTab","HistoryTab","CameraTab","Ionicons","Portal","FAB","useIsFocused","getFocusedRouteNameFromRoute","createMaterialTopTabNavigator","Tab","MainTabs","route","isFocused","showFab","setShowFab","routeName","icon","getTabBarVisibily","state","routes","index","name","showIcon","tabBarShowLabel","tabBarIcon","tabInfo","color","tabBarVisible","position","bottom","right","backgroundColor","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport HomeTab from '../screens/tab/HomeTab'\nimport StatusTab from '../screens/tab/StatusTab';\nimport HistoryTab from '../screens/tab/HistoryTab';\nimport CameraTab from '../screens/tab/CameraScreen';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { Portal, FAB } from \"react-native-paper\"\nimport { useIsFocused, getFocusedRouteNameFromRoute } from \"@react-navigation/native\"\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\n\nconst Tab = createMaterialTopTabNavigator();\n\nconst MainTabs = ({route}) => {\n  const isFocused = useIsFocused()\n  const [showFab, setShowFab] = useState(true)\n  const routeName = getFocusedRouteNameFromRoute(route) ?? 'STATUS';\n\n  let icon = \"camera\"\nuseEffect(()=>{\n  if(routeName == \"Camera\"){\n    setShowFab(false)\n  }else{\n    setShowFab(true)\n  }\n},[routeName])\n\n  switch (routeName) {\n    case 'CHATS':\n      icon = 'android-messages';\n      break;\n    case \"Camera\":\n    default:\n      icon = 'camera';\n      break;\n  }\n  const getTabBarVisibily = (route) => {\n    const routeName = route.state ? route.state.routes[route.state.index].name : ''\n    if (routeName === \"Camera\") {\n      return false\n    }\n    return true\n  }\n\n  return (\n    <React.Fragment>\n      <Tab.Navigator initialRouteName=\"CHATS\" screenOptions={{ showIcon: true }} backBehavior=\"initialRoute\" >\n        <Tab.Screen name=\"Camera\" component={CameraTab} options={({ route }) => ({\n          tabBarShowLabel: false,\n          tabBarIcon: (tabInfo) => (<Ionicons name=\"ios-camera\" size={24} color={tabInfo.color} />),\n          tabBarVisible: getTabBarVisibily(route),\n        })}\n        />\n        <Tab.Screen name=\"CHATS\" component={HomeTab} />\n        <Tab.Screen name=\"STATUS\" component={StatusTab} />\n        <Tab.Screen name=\"CALLS\" component={HistoryTab} />\n      </Tab.Navigator>\n     {showFab && <Portal>\n       \n        <FAB\n          visible={isFocused}\n          icon={icon}\n          small={false}\n          style={{\n            position: 'absolute',\n            bottom: \"7%\",\n            right: \"10%\",\n            backgroundColor: \"purple\"\n          }}\n          color=\"white\"\n          onPress={()=>console.log(\"Going to contacts\")}\n\n        />\n      </Portal>}\n    </React.Fragment>\n\n  );\n\n}\nexport default MainTabs\n"]},"metadata":{},"sourceType":"module"}