{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/felix/Felix/Hack/hack/components/utils/Alert.js\";\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button, Snackbar, Colors, Paragraph, Subheading } from 'react-native-paper';\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nvar Alert = function Alert(props) {\n  var type = props.type;\n  var colorType = Colors.white;\n\n  if (type === \"error\") {\n    colorType = Colors.red700;\n  } else if (type === \"info\") {\n    colorType = Colors.blue300;\n  } else if (type === \"success\") {\n    colorType = Colors.green300;\n  } else {\n    colorType = Colors.white;\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(Snackbar, {\n    visible: props.visible,\n    onDismiss: props.onDismiss,\n    duration: 5000,\n    action: {\n      label: React.createElement(MaterialCommunityIcons, {\n        name: \"close\",\n        size: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 28\n        }\n      }),\n      onPress: props.actionLabelPress ? props.actionLabelPress : props.onDismiss\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: colorType\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, props.message)));\n};\n\nexport default Alert;\nvar styles = StyleSheet.create({\n  container: {}\n});","map":{"version":3,"sources":["/home/felix/Felix/Hack/hack/components/utils/Alert.js"],"names":["React","Button","Snackbar","Colors","Paragraph","Subheading","MaterialCommunityIcons","Alert","props","type","colorType","white","red700","blue300","green300","styles","container","visible","onDismiss","label","onPress","actionLabelPress","color","message","StyleSheet","create"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,MAA3B,EAAmCC,SAAnC,EAA8CC,UAA9C,QAAgE,oBAAhE;AACA,SAASC,sBAAT,QAAuC,oBAAvC;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrB,MAAQC,IAAR,GAAiBD,KAAjB,CAAQC,IAAR;AACA,MAAIC,SAAS,GAAGP,MAAM,CAACQ,KAAvB;;AAEA,MAAGF,IAAI,KAAK,OAAZ,EAAoB;AAChBC,IAAAA,SAAS,GAAGP,MAAM,CAACS,MAAnB;AACH,GAFD,MAEM,IAAGH,IAAI,KAAK,MAAZ,EAAmB;AACrBC,IAAAA,SAAS,GAAGP,MAAM,CAACU,OAAnB;AACH,GAFK,MAEC,IAAGJ,IAAI,KAAK,SAAZ,EAAsB;AACzBC,IAAAA,SAAS,GAAGP,MAAM,CAACW,QAAnB;AACH,GAFM,MAEF;AACDJ,IAAAA,SAAS,GAAGP,MAAM,CAACQ,KAAnB;AACH;;AAED,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,OAAO,EAAER,KAAK,CAACS,OADnB;AAEI,IAAA,SAAS,EAAET,KAAK,CAACU,SAFrB;AAGI,IAAA,QAAQ,EAAE,IAHd;AAII,IAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,oBAAC,sBAAD;AAAwB,QAAA,IAAI,EAAC,OAA7B;AAAqC,QAAA,IAAI,EAAE,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH;AAEJC,MAAAA,OAAO,EAAEZ,KAAK,CAACa,gBAAN,GAAyBb,KAAK,CAACa,gBAA/B,GAAkDb,KAAK,CAACU;AAF7D,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAEZ;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACe,OADX,CARJ,CADJ,CADJ;AAgBH,CA9BD;;AA+BA,eAAehB,KAAf;AAEA,IAAMQ,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,SAAS,EAAE;AADkB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { View, StyleSheet, Text } from 'react-native';\r\nimport { Button, Snackbar, Colors, Paragraph, Subheading } from 'react-native-paper';\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\"\r\nconst Alert = (props) => {\r\n    const { type } = props\r\n    let colorType = Colors.white\r\n\r\n    if(type === \"error\"){\r\n        colorType = Colors.red700\r\n    }else if(type === \"info\"){\r\n        colorType = Colors.blue300\r\n    } else if(type === \"success\"){\r\n        colorType = Colors.green300\r\n    }else{\r\n        colorType = Colors.white\r\n    }\r\n    \r\n    return (\r\n        <View style={styles.container}>\r\n            <Snackbar\r\n                visible={props.visible}\r\n                onDismiss={props.onDismiss}\r\n                duration={5000}\r\n                action={{\r\n                    label: <MaterialCommunityIcons name=\"close\" size={20} />,\r\n                    onPress: props.actionLabelPress ? props.actionLabelPress : props.onDismiss,\r\n                }}>\r\n                <Text style={{ color: colorType }}>\r\n                    {props.message}\r\n                </Text>\r\n            </Snackbar>\r\n        </View>\r\n    );\r\n};\r\nexport default Alert\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}